{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataFactory1Jaw"
		},
		"AzureBlobStorageLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageLS'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For DCA data.",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DCACharges')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Charges.csv",
						"container": "jaw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Record ID",
						"type": "String"
					},
					{
						"name": "Certificate Number",
						"type": "String"
					},
					{
						"name": "Business Name",
						"type": "String"
					},
					{
						"name": "Violation Date",
						"type": "String"
					},
					{
						"name": "Industry",
						"type": "String"
					},
					{
						"name": "Borough",
						"type": "String"
					},
					{
						"name": "Charge",
						"type": "String"
					},
					{
						"name": "Charge Count",
						"type": "String"
					},
					{
						"name": "Outcome",
						"type": "String"
					},
					{
						"name": "Counts Settled",
						"type": "String"
					},
					{
						"name": "Counts Guilty",
						"type": "String"
					},
					{
						"name": "Counts Not Guilty",
						"type": "String"
					},
					{
						"name": "Building Number",
						"type": "String"
					},
					{
						"name": "Street",
						"type": "String"
					},
					{
						"name": "Street 2",
						"type": "String"
					},
					{
						"name": "Unit Type",
						"type": "String"
					},
					{
						"name": "Unit",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Zip",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DCAFinesFees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DCA_Fines_and_Fees.csv",
						"container": "jaw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "RECORD ID",
						"type": "String"
					},
					{
						"name": "RECORD TYPE",
						"type": "String"
					},
					{
						"name": "BUSINESS NAME",
						"type": "String"
					},
					{
						"name": "BUSINESS NAME2",
						"type": "String"
					},
					{
						"name": "INDUSTRY",
						"type": "String"
					},
					{
						"name": "FEE SEQUENCE ID",
						"type": "String"
					},
					{
						"name": "FEE TYPE",
						"type": "String"
					},
					{
						"name": "FEE DESCRIPTION",
						"type": "String"
					},
					{
						"name": "FEE AMOUNT",
						"type": "String"
					},
					{
						"name": "FEE DATE",
						"type": "String"
					},
					{
						"name": "FEE STATUS",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DCAPayments')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Payments_Received_for_DCA_Fines_and_Fees.csv",
						"container": "jaw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "RECORD ID",
						"type": "String"
					},
					{
						"name": "RECORD TYPE",
						"type": "String"
					},
					{
						"name": "BUSINESS NAME",
						"type": "String"
					},
					{
						"name": "BUSINESS NAME2",
						"type": "String"
					},
					{
						"name": "INDUSTRY",
						"type": "String"
					},
					{
						"name": "FEE SEQUENCE ID",
						"type": "String"
					},
					{
						"name": "FEE TYPE",
						"type": "String"
					},
					{
						"name": "FEE DESCRIPTION",
						"type": "String"
					},
					{
						"name": "PAYMENT AMOUNT",
						"type": "String"
					},
					{
						"name": "PAYMENT DATE",
						"type": "String"
					},
					{
						"name": "TRANSACTION TYPE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DCAFinesFees",
								"type": "DatasetReference"
							},
							"name": "DCAFinesFesssource"
						},
						{
							"dataset": {
								"referenceName": "DCAPayments",
								"type": "DatasetReference"
							},
							"name": "DCAPaymentssource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DCAFinesFees",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ID"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {RECORD ID} as string,",
						"          {RECORD TYPE} as string,",
						"          {BUSINESS NAME} as string,",
						"          {BUSINESS NAME2} as string,",
						"          INDUSTRY as string,",
						"          {FEE SEQUENCE ID} as integer,",
						"          {FEE TYPE} as string,",
						"          {FEE DESCRIPTION} as string,",
						"          {FEE AMOUNT} as double,",
						"          {FEE DATE} as date,",
						"          {FEE STATUS} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DCAFinesFesssource",
						"source(output(",
						"          {RECORD ID} as string,",
						"          {RECORD TYPE} as string,",
						"          {BUSINESS NAME} as string,",
						"          {BUSINESS NAME2} as string,",
						"          INDUSTRY as string,",
						"          {FEE SEQUENCE ID} as integer,",
						"          {FEE TYPE} as string,",
						"          {FEE DESCRIPTION} as string,",
						"          {PAYMENT AMOUNT} as double,",
						"          {PAYMENT DATE} as string,",
						"          {TRANSACTION TYPE} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DCAPaymentssource",
						"DCAFinesFesssource, DCAPaymentssource join(DCAFinesFesssource@{RECORD ID} == DCAPaymentssource@{RECORD ID},",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ID",
						"ID sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {RECORD ID} as string,",
						"          {RECORD TYPE} as string,",
						"          {BUSINESS NAME} as string,",
						"          {BUSINESS NAME2} as string,",
						"          INDUSTRY as string,",
						"          {FEE SEQUENCE ID} as string,",
						"          {FEE TYPE} as string,",
						"          {FEE DESCRIPTION} as string,",
						"          {FEE AMOUNT} as string,",
						"          {FEE DATE} as string,",
						"          {FEE STATUS} as string",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DCAFinesFees')]",
				"[concat(variables('factoryId'), '/datasets/DCAPayments')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DCAFinesFesssource": {},
									"DCAPaymentssource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		}
	]
}