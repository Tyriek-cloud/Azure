{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DCAFinesFees",
						"type": "DatasetReference"
					},
					"name": "DCAFinesFesssource"
				},
				{
					"dataset": {
						"referenceName": "DCAPayments",
						"type": "DatasetReference"
					},
					"name": "DCAPaymentssource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "ID"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {RECORD ID} as string,",
				"          {RECORD TYPE} as string,",
				"          {BUSINESS NAME} as string,",
				"          {BUSINESS NAME2} as string,",
				"          INDUSTRY as string,",
				"          {FEE SEQUENCE ID} as integer,",
				"          {FEE TYPE} as string,",
				"          {FEE DESCRIPTION} as string,",
				"          {FEE AMOUNT} as double,",
				"          {FEE DATE} as date,",
				"          {FEE STATUS} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DCAFinesFesssource",
				"source(output(",
				"          {RECORD ID} as string,",
				"          {RECORD TYPE} as string,",
				"          {BUSINESS NAME} as string,",
				"          {BUSINESS NAME2} as string,",
				"          INDUSTRY as string,",
				"          {FEE SEQUENCE ID} as integer,",
				"          {FEE TYPE} as string,",
				"          {FEE DESCRIPTION} as string,",
				"          {PAYMENT AMOUNT} as double,",
				"          {PAYMENT DATE} as string,",
				"          {TRANSACTION TYPE} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DCAPaymentssource",
				"DCAFinesFesssource, DCAPaymentssource join(DCAFinesFesssource@{RECORD ID} == DCAPaymentssource@{RECORD ID},",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ID",
				"ID sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     format: 'parquet') ~> sink1"
			]
		}
	}
}